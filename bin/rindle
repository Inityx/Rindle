#!/usr/bin/env ruby

require './lib/fetcher'
require './lib/compiler'

require 'time'

D_SUB = 'talesfromtechsupport'.freeze
D_TYPE = :hot
D_COUNT = 100
NOWSTRING = Time.now.strftime('%Y-%m-%d-%H%M').freeze

ID = [D_SUB, D_TYPE, NOWSTRING].freeze
TITLE_SLUG = "./#{ID.join('_')}".freeze
TITLE = ID.join(' ').freeze

STYLESHEET = File.expand_path('stylesheet.css', "#{File.dirname(__FILE__)}/../static").freeze

raise "./#{TITLE_SLUG} not empty" if Dir.exist?("./#{TITLE_SLUG}") && (Dir.entries("./#{TITLE_SLUG}") - %w(. ..)).any?

puts 'Locating kindlegen'
kindlegen_found = system('which kindlegen')
abort unless kindlegen_found
puts "Done.\n"

puts 'Fetching posts'
posts = Rindle::Fetcher.new(
  D_SUB,
  D_TYPE
).fetch(
  D_COUNT
)
puts "Done.\n"

puts 'Compiling to eBook source'
metadata_file = Rindle::Compiler.new(
  TITLE_SLUG,
  STYLESHEET
).compile(
  TITLE,
  posts
)
puts "Done.\n"

puts 'Invoking kindlegen'
system("kindlegen #{metadata_file} -o output.mobi")
FileUtils.cp("#{File.dirname(metadata_file)}/output.mobi", "./#{TITLE_SLUG}.mobi")
puts 'Done.'
